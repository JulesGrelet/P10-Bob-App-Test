name: CI actions of Back-End

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
  contents: write

defaults:
  run:
    working-directory: back

jobs:

  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          mvn compile
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run tests with Maven
        run:
          mvn test
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

  test-coverage:
    name: Tests Coverage
    #needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run tests and generate coverage with Maven & Jacoco
        run: mvn clean test
          #mvn jacoco:merge package jacoco:report verify -DskipTests=true
          #-Djacoco.destFile=back/target/site/jacoco/${project.artifactId}.exec
      - name: Upload jacoco coverage as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: back-coverage-report
          path: back/target/site/jacoco/
          if-no-files-found: error
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: back-coverage-report
          path: back/target/site/jacoco/

  quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_BACK_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=P10-Bob-App-Test-Back -Dsonar.projectName=P10-Bob-App-Test-Back

  package:
    name: Packaging
    runs-on: ubuntu-latest
    needs: quality
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: julesgrelet/bobapp-test-back
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: back/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}_1.${{ github.run_number }}.${{ github.run_attempt }}
          labels: ${{ steps.meta.outputs.labels }}
